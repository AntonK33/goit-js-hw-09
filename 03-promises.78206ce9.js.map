{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,kBAClCC,SAAUF,SAASC,cAAc,kBACjCE,QAASH,SAASC,cAAc,iBAChCG,UAAWJ,SAASC,cAAc,oBAmBpC,SAASI,GAAcC,SAACA,EAAQC,MAAEA,IAChC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KAETH,EAEHF,EAAQ,uBAAuBH,QAAeC,OAG7CG,EAAO,sBAAsBJ,QAAeC,MAAS,GAElDA,EAAA,GAGP,CA/BAT,EAAKC,UAAUgB,iBAAiB,UAAWC,IACzCA,EAAEC,iBACF,IAAIV,EAAQW,OAAOpB,EAAKI,SAASiB,OAC7BC,EAAOF,OAAOpB,EAAKK,QAAQgB,OAC3BE,EAASH,OAAOpB,EAAKM,UAAUe,OAEnC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BjB,EAAc,CAAEC,SAAUgB,EAAGf,MAAOA,IACnCgB,MAAKC,GAAUC,EAAA7B,GAAS8B,OAAOC,QAAQH,KACrCI,OAAMC,GAASJ,EAAA7B,GAAS8B,OAAOI,QAAQD,KAC1CtB,GAASa,CACX","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  submitRef: document.querySelector('[class=\"form\"]'),\n  delayRef: document.querySelector('[name=\"delay\"]'),\n  stepRef: document.querySelector('[name=\"step\"]'),\n  amountRef: document.querySelector('[name=\"amount\"]'),\n}\n\nrefs.submitRef.addEventListener('submit', (e) => {\n  e.preventDefault();\n  let delay = Number(refs.delayRef.value);\n  let step = Number(refs.stepRef.value);\n  let amount = Number(refs.amountRef.value);\n \n  for (let i = 1; i <= amount; i++) {\n    createPromise({ position: i, delay: delay })\n    .then(resalt => Notiflix.Notify.success(resalt))\n      .catch(error => Notiflix.Notify.failure(error))\n    delay += step;\n  }\n\n})\n\n\nfunction createPromise({position, delay}) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      \n  if (shouldResolve) {\n    // Fulfill\n   resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    reject(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n    }, delay);\n  })\n  \n}\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","submitRef","document","querySelector","delayRef","stepRef","amountRef","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","Number","value","step","amount","i","then","resalt","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.78206ce9.js.map"}